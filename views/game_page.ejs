<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Main Game</title>
    <link rel="stylesheet" href="/css/style.css" />
  </head>
  <!--
  <body></body>
</html>
-->

  <body>
    <!--残り秒数を表示-->
    <div class="game_page_container">
      <div id="countdown"></div>
      <div id="random_generate_number"></div>
      <div id="Score_count"></div>
    </div>

    <div class="number_prediction">
      <div
        id="Odd_number_prediction"
        onclick="CheckAnswer(1)"
        class="prediction_buttom"
      >
        奇数
      </div>
      <div
        id="Even_number_prediction"
        onclick="CheckAnswer(0)"
        class="prediction_buttom"
      >
        偶数
      </div>
    </div>

    <div id="return_title_button" class="hidden" onclick="return_title()">
      タイトルに戻る
    </div>

    <script>
      // カウントダウン開始時刻を設定（例: 10分後）
      const countdownStart = new Date();
      countdownStart.setSeconds(countdownStart.getSeconds() + 31);
      let timeup = true;

      function updateCountdown() {
        const now = new Date();
        const difference = countdownStart - now - 1;

        // 残り時間を計算
        const seconds = Math.floor(difference / 1000);

        // カウントダウンを表示
        document.getElementById("countdown").innerHTML = `残り ${seconds}秒`;

        const return_title_button = document.getElementById(
          "return_title_button"
        );

        // タイマーが0になったら停止
        if (difference <= 0) {
          clearInterval(timerInterval);
          document.getElementById("countdown").innerHTML = "TIME UP";
          return_title_button.classList.remove("hidden"); // hiddenクラスを削除して表示させる
          return_title_button.classList.add("restart_title_button"); // restart_title_buttonクラスを追加
          timeup = false;
        }
      }

      // 1秒ごとに更新
      const timerInterval = setInterval(updateCountdown, 1000);

      // 最初の更新
      updateCountdown();

      let score = 0;
      //1から99までの乱数を出す
      function generateRandomNumber() {
        return Math.floor(Math.random() * 99) + 1;
      }
      function CheckAnswer(prediction) {
        if (random_number % 2 === prediction && timeup) {
          score++;
          random_number = generateRandomNumber();
          document.getElementById("Score_count").innerHTML = `Score : ${score}`;
          document.getElementById(
            "random_generate_number"
          ).innerHTML = `${random_number}`;
        } else if (!timeup) {
          console.log("動いた！");
        } else {
          score--;
          random_number = generateRandomNumber();
          document.getElementById("Score_count").innerHTML = `Score : ${score}`;
          document.getElementById(
            "random_generate_number"
          ).innerHTML = `${random_number}`;
        }
      }
      let random_number = generateRandomNumber();
      document.getElementById("Score_count").innerHTML = `Score : ${score}`;
      document.getElementById(
        "random_generate_number"
      ).innerHTML = `${random_number}`;

      function return_title() {
        window.location.href = "/";
      }
    </script>
  </body>
</html>
